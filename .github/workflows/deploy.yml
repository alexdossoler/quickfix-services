name: Deploy to Droplet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests (if any)
      run: npm run lint
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to Droplet
      if: github.ref == 'refs/heads/main'
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      run: |
        # Install rsync
        sudo apt-get update && sudo apt-get install -y rsync
        
        # Setup SSH
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
        
        # Create deployment package
        tar -czf deployment.tar.gz .next public package.json package-lock.json
        
        # Upload to server
        scp -i ~/.ssh/deploy_key deployment.tar.gz $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/
        
        # Deploy on server
        ssh -i ~/.ssh/deploy_key $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
          cd $DEPLOY_PATH
          tar -xzf deployment.tar.gz
          npm ci --production
          pm2 reload quickfix-services || pm2 start ecosystem.config.js
          rm deployment.tar.gz
        EOF